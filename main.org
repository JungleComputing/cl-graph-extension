#+property: header-args :comments link :tangle-mode (identity #o400) :results output silent :mkdirp yes

#+title: An Extension for ~cl-graph~

* Tangling :noexport:

#+begin_src emacs-lisp
(async-start
 (lambda ()
   (require 'org)
   (require 'ob)
   (require 'ob-tangle)
   (let ((files '("main.org" "system-definition.org" "graphs.org")))
     (mapc (lambda (file)
	     (find-file file)
	     (let ((result (org-babel-tangle)))
	       (kill-buffer)
	       result))
	   files)))
 (lambda (result)
   (message "Done with tangling %s." (mapconcat 'identity result " "))))
(princ "Busy with tangling")
#+end_src

* Exporting HTML :noexport:

#+begin_src emacs-lisp :exports none :results output silent
(defun export ()
  (require 'package)
  (package-initialize)
  (require 'org)
  (require 'ob)
  (require 'htmlize)
  (find-file "main.org")
  (unless (file-exists-p "html")
    (mkdir "html"))
  (org-html-export-as-html)
  (write-file "html/main.html")
  (kill-buffer))

(defun msg-me (process event)
  (when (equal event "finished\n")
    (message "Exporting to HTML done")
    (kill-buffer "*html-export*")))

(progn
  (set-process-sentinel
   (start-process-shell-command
    "html-export" "*html-export*"
    (format "TERM=xterm-256color;emacs -Q -nw --eval '(progn (funcall %S) (kill-emacs))';exit"
	    (symbol-function 'export))) 'msg-me)
  (princ "Busy exporting to HTML"))
#+end_src

* Cleaning :noexport:

 # clean
#+begin_src sh :exports none :results output silent :shebang #!/bin/sh
/bin/rm -rf html
/bin/rm -rf system
#+end_src

* Introduction

This is a small package that extends the package ~cl-graph~ a bit.  It adds a
check for equality and edges and a closure that works for directed graphs.

# #+include: "system-definition.org" :minlevel 1
#+include: "graphs.org" :minlevel 1
